apiVersion: apps/v1
kind: Deployment
metadata:
  name: crypto-stop-loss-bot
  labels:
    app.kubernetes.io/name: crypto-stop-loss-bot
spec: 
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: crypto-stop-loss-bot
  template:
    metadata:
      labels:
        app.kubernetes.io/name: crypto-stop-loss-bot
    spec:
      containers:
        - name: crypto-stop-loss-bot
          image: docker.io/josemariasoladuran/crypto-stop-loss-bot:0.50.1
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          env:
            - name: CORS_ENABLED
              value: "false"
            - name: TELEGRAM_BOT_ENABLED
              value: "true"
            - name: BACKGROUND_TASKS_ENABLED
              value: "true"
            - name: DATABASE_IN_MEMORY
              value: "false"
            - name: DATABASE_PATH
              value: "/app/db/crypto_stop_loss.sqlite"
            - name: OPERATING_EXCHANGE
              value: "bit2me"
            - name: BIT2ME_API_BASE_URL
              value: "https://gateway.bit2me.com"
            - name: AUTHORIZED_GOOGLE_USER_EMAILS_COMMA_SEPARATED
              value: "josemaria.sola.duran@gmail.com,jmsola3092@gmail.com"
            - name: GOOGLE_OAUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: crypto-stop-loss-bot
                  key: google.oauth.client.id
            - name: GOOGLE_OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: crypto-stop-loss-bot
                  key: google.oauth.client.secret
            - name: TELEGRAM_BOT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: crypto-stop-loss-bot
                  key: telegram.bot.token
            - name: BIT2ME_API_KEY
              valueFrom:
                secretKeyRef:
                  name: crypto-stop-loss-bot
                  key: bit2me.api.key
            - name: BIT2ME_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: crypto-stop-loss-bot
                  key: bit2me.api.secret
            - name: GEMINI_PRO_API_ENABLED
              value: "true"
            - name: GEMINI_PRO_API_KEY
              valueFrom:
                secretKeyRef:
                  name: crypto-stop-loss-bot
                  key: gemini.pro.api.key
          resources:
            limits:
              memory: "512Mi"
              cpu: "1"
            requests:
              memory: "128Mi"
              cpu: "250m"
          readinessProbe:
            httpGet:
              path: /health/status
              port: 8000
            initialDelaySeconds: 40    # wait a bit longer before first check
            timeoutSeconds: 5          # allow more time for the response
            periodSeconds: 15          # check every 15 seconds
            failureThreshold: 3        # allow 3 consecutive failures before marking NotReady
          livenessProbe:
            httpGet:
              path: /health/status
              port: 8000
            initialDelaySeconds: 60    # wait longer before first liveness check
            timeoutSeconds: 5
            periodSeconds: 20
            failureThreshold: 4        # allow 4 consecutive failures before restarting
          volumeMounts:
            - name: sqlite-storage
              mountPath: /app/db  # <-- SQLite file will go here
      volumes:
        - name: sqlite-storage
          persistentVolumeClaim:
            claimName: sqlite-pvc